<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:controls="clr-namespace:Tooling.Foundation.UI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TreeViewItemExStyle" TargetType="{x:Type controls:TreeViewItemEx}">
            <Setter Property="MinHeight"
                Value="25" />
            <Setter Property="Background"
                Value="Transparent" />
            <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:TreeViewItemEx}">
                        <ControlTemplate.Resources>
                            <converters:TreeViewMarginConverter Length="12"
                                                            x:Key="LengthConverter" />
                        </ControlTemplate.Resources>
                        <StackPanel>
                            <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}">
                                <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                  VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" />

                                    <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost">
                                <ItemsPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="1" />
                                </ItemsPresenter.LayoutTransform>
                            </ItemsPresenter>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                 Value="False">
                                <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"></Setter>
                            </Trigger>

                            <Trigger Property="HasItems"
                                 Value="False">
                                <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                            </Trigger>

                            <Trigger SourceName="Border"
                                 Property="IsMouseOver"
                                 Value="True">
                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource MahApps.Brushes.Accent3}" />
                                <Setter Property="Foreground"
                                    Value="{DynamicResource BlackColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected"
                                 Value="True">
                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Foreground"
                                    Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                 Value="False">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled"
                                           Value="False" />
                                    <Condition Property="IsSelected"
                                           Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Border"
                                        Property="Background"
                                        Value="{DynamicResource GrayBrush7}" />
                                    <Setter Property="Foreground"
                                        Value="{DynamicResource WhiteBrush}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                           Value="True" />
                                    <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource MahApps.Brushes.Accent2}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    <Style x:Key="TreeViewItemEx2Style" TargetType="{x:Type controls:TreeViewItemEx}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TreeViewItemEx}">
                    <ControlTemplate.Resources>
                        <converters:TreeViewMarginConverter Length="12"
                                                            x:Key="LengthConverter" />
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}">
                            <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                  VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" />

                                <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost">
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="1" />
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="False">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"></Setter>
                        </Trigger>

                        <Trigger Property="HasItems"
                                 Value="False">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Border"
                                 Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource Accent2ColorBrush3}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BlackColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource Accent2ColorBrush}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border"
                                        Property="Background"
                                        Value="{DynamicResource GrayBrush7}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource WhiteBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource Accent2ColorBrush2}" />
                        </MultiTrigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboard">
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource AccentColor}" To="{StaticResource AccentColor4}" 
                                            AutoReverse="True" Duration="0:0:1"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="BeginStoryboard" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>